/*
Deployment script for ADF-ConfigurationDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "ADF-ConfigurationDB"
:setvar DefaultFilePrefix "ADF-ConfigurationDB"
:setvar DefaultDataPath "D:\DataBases\"
:setvar DefaultLogPath "D:\DataBases\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
DECLARE @Systems AS TABLE (
	Id INT NOT NULL
	,[Name] VARCHAR(50) NOT NULL
	);
DECLARE @PartitionTypes AS TABLE (
	Id INT NOT NULL
	,[Name] VARCHAR(50) NOT NULL
	);

INSERT INTO @Systems (
	Id
	,[Name]
	)
VALUES (
	1
	,'On Premise SQL Server'
	);

INSERT INTO @PartitionTypes (
	Id
	,[Name]
	)
VALUES (
	1
	,'Partitioning by Date Range'
	)
	,(
	2
	,'Partitioning by Primary Key Range'
	);

SET XACT_ABORT ON;

BEGIN TRAN

MERGE dbo.Sources AS trg
USING (
	SELECT Id
		,[Name]
	FROM @Sources
	) AS src
	ON (trg.Id = src.Id)
WHEN MATCHED
	THEN
		UPDATE
		SET [Name] = src.[Name]
WHEN NOT MATCHED
	THEN
		INSERT (
			Id
			,[Name]
			)
		VALUES (
			src.Id
			,src.[Name]
			);

MERGE dbo.PartitionTypes AS trg
USING (
	SELECT Id
		,[Name]
	FROM @PartitionTypes
	) AS src
	ON (trg.Id = src.Id)
WHEN MATCHED
	THEN
		UPDATE
		SET [Name] = src.[Name]
WHEN NOT MATCHED
	THEN
		INSERT (
			Id
			,[Name]
			)
		VALUES (
			src.Id
			,src.[Name]
			);

COMMIT TRAN

GO

GO
PRINT N'Update complete.';


GO
